@model IceCream.ViewModel.InsertProductViewModel
@{
    ViewBag.Title = "Cập nhật sản phẩm";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    td #Product_Price{
        width: 150px;
    }
    td #Product_SaleOff {
        width: 150px;
    }
</style>

<h2>Cập nhật sản phẩm</h2>
<a class="btn quick-link" href="@Url.Action("ListProduct")"><i class="far fa-list mr-1"></i> Danh sách sản phẩm</a>
<div class="box_content">
    @using (Html.BeginForm("UpdateProduct", "ProductVcms", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Product.Id)
        <table class="form_table">
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.CategoryId)</td>
                <td class="form_text">
                    <div class="row">
                        <div class="col-4">
                            @Html.DropDownListFor(model => model.ParentId, Model.ProductCategoryList, "Danh mục sản phẩm cha", new { @class = "form_control w300", onchange = "loadChildCategory(this.value)" })
                            @Html.ValidationMessageFor(model => model.ParentId)
                        </div>
                        <div class="col-4">
                            @Html.DropDownListFor(model => model.CategoryId, Model.ChildCategoryList, "Danh mục sản phẩm", new { @class = "form_control w300", id = "ChildCategoryId" })
                            @Html.ValidationMessageFor(model => model.CategoryId)
                        </div>
                        @*<div class="col-4">
                            @Html.EnumDropDownListFor(model => model.Product.ProductType, new { @class = "form_control w300" })
                        </div>*@
                    </div>
                </td>
            </tr>
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.Name)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Name)</td>
            </tr>
            <tr> 
                <td class="form_name">@Html.LabelFor(model => model.Product.Description)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Description)</td>
            </tr>
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.ListImage)</td>
                <td class="form_text">
                    <div class="alert alert-info">
                        <p class="btn btn-success fileinput-button">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span>Chọn ảnh...</span>
                            <input type="file" id="fileupload" name="files[]" accept="image/*" multiple="" />
                        </p><br />
                        - Chọn ảnh để upload: (gif, png, jpg, jpeg < 4MB)<br />
                        - Ảnh đầu tiên sẽ là ảnh đại diện<br />
                    </div>
                    <div id="progress" class="progress">
                        <div class="progress-bar progress-bar-success"></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="form_name"></td>
                <td class="form_text">
                    <ul id="ListImages">
                        @if (Model.Product.ListImage != null)
                        {
                            var i = 1;
                            var arrPic = Model.Product.ListImage.Split(',');
                            foreach (var item in arrPic)
                            {
                                <li>
                                    <input type="hidden" name="Pictures" value="@item" />
                                    <img src="@Path.Combine("/images/products/",item)?w=80&h=80&mode=crop" alt="" />
                                    <a href="javascript:;" id="@i" onclick="delfile( '@i')"><img src="/content/admin/icon-delete.png" alt="" /></a>
                                </li>
                                i = i + 1;
                            }
                        }
                    </ul>
                </td>
            </tr>
            @*<tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.Quantity)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Quantity) </td>
            </tr>*@
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.Price)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Price)</td>
            </tr>
            <tr> 
                <td class="form_name">@Html.LabelFor(model => model.Product.SaleOff)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.SaleOff)</td>
            </tr>
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.Body)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Body)</td>
            </tr>
            
            @*<tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.Benefit)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Benefit)</td>
            </tr> 
            <tr> 
                <td class="form_name">@Html.LabelFor(model => model.Product.Instruction)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Instruction)</td>
            </tr>*@
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.Home)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Home)</td>
            </tr>
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.Active)</td>
                <td class="form_text">@Html.CheckBoxFor(model => model.Product.Active, new { @checked = "checked" })</td>
            </tr>
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.Sort)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.Sort)</td>
            </tr>
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.TitleMeta)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.TitleMeta)</td>
            </tr>
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Product.DescriptionMeta)</td>
                <td class="form_text">@Html.EditorFor(model => model.Product.DescriptionMeta)</td>
            </tr>
            <tr>
                <td class="form_name"></td>
                <td class="form_text">
                    <input type="submit" class="btn quick-link" value="Cập nhật" />
                </td>
            </tr>
        </table>
    }
</div>
@section scripts{
    <script src="~/Scripts/jquery.maskMoney.min.js"></script>
    <script>
        $(function () {
            $(".input-number").maskMoney({
                precision: 0,
                thousands: ','
            });
        });
        $(function () {
            $("#ListImages").sortable();
            $("#ListImages").disableSelection();
        });
        var i = 1;
        $("#fileupload").fileupload({
            add: function (e, data) {
                var uploadErrors = [];
                var acceptFileTypes = /^image\/(gif|jpe?g|png)$/i;
                if (data.originalFiles[0]["type"].length && !acceptFileTypes.test(data.originalFiles[0]["type"])) {
                    uploadErrors.push("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                }
                if (data.originalFiles[0]["size"] > 4000000) {
                    uploadErrors.push("Dung lượng ảnh lớn hơn 4MB");
                }
                var totalImg = $("#ListImages .thumb-img-box").length;
                if (totalImg >= 10) {
                    uploadErrors.push("Chỉ đăng tối đa 10 ảnh");
                }
                if (uploadErrors.length > 0) {
                    alert(uploadErrors.join("\n"));
                    return false;
                } else {
                    data.submit();
                }
                return true;
            },
            url: "/Uploader/Upload?folder=products&r=" + Math.random(),
            dataType: "json",
            done: function (e, data) {
                $.each(data.result.files, function (index, file) {
                    $('#ListImages').append('<li><input type="hidden" name="Pictures" value ="' + file.name + '" /><img src="/images/products/' + file.name + '?w=80&h=80"/><a href="javascript:;" id="' + i + '" onclick="delfile(' + i + ')"><img src="/content/admin/icon-delete.png" alt="" style="vertical-align:middle" /></a></li>');
                });
                i = i + 1;
                $("#progress").fadeOut(2000);
            },
            start: function () {
                $("#progress .progress-bar").css("width", "0");
                $("#progress").show();
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $("#progress .progress-bar").css("width", progress + "%");
            }
        }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');

        function delfile(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#' + divid).parent().fadeOut().remove();
            }
        }

        function loadChildCategory(id) {
            $.getJSON("/ProductVcms/GetChildCategory", { parentId: id }, function (data) {
                var items = [];
                items.push("<option value>Hãy chọn danh mục</option>");
                $.each(data, function (key, val) {
                    items.push("<option value='" + val.Id + "'>" + val.CategoryName + "</option>");
                });
                $("#ChildCategoryId").html(items.join(""));
            });
        }
    </script>
}
